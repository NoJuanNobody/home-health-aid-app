# =============================================================================
# Home Health Aid App - Environment Variables Example
# =============================================================================
# Copy this file to .env and fill in your actual values
# cp .env.example .env

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Flask Secret Key (change in production!)
SECRET_KEY=your-super-secret-key-change-in-production

# JWT Settings
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Development Database (SQLite by default)
DEV_DATABASE_URL=sqlite:///dev.db

# Production Database (PostgreSQL)
DATABASE_URL=postgresql://username:password@localhost:5432/home_health_aid

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# SMTP Settings
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis URL for Celery and caching
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# AWS S3 CONFIGURATION
# =============================================================================

# AWS Credentials
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1

# S3 Bucket for file uploads
S3_BUCKET=your-s3-bucket-name

# =============================================================================
# TWILIO SMS CONFIGURATION
# =============================================================================

# Twilio Credentials
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# =============================================================================
# STRIPE PAYMENT CONFIGURATION
# =============================================================================

# Stripe API Keys
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key

# =============================================================================
# SENDGRID EMAIL SERVICE (Alternative to SMTP)
# =============================================================================

# SendGrid API Key (optional - if using SendGrid instead of SMTP)
SENDGRID_API_KEY=your-sendgrid-api-key

# =============================================================================
# GEOLOCATION SETTINGS
# =============================================================================

# Default geofence radius in meters
DEFAULT_GEOFENCE_RADIUS=100

# Location update interval in seconds
LOCATION_UPDATE_INTERVAL=30

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================

# Maximum file upload size (16MB)
MAX_CONTENT_LENGTH=16777216

# Upload folder path
UPLOAD_FOLDER=uploads

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Flask Debug Mode (set to False in production)
FLASK_DEBUG=True

# Flask Environment
FLASK_ENV=development

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS Allowed Origins (comma-separated)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# =============================================================================
# CELERY CONFIGURATION
# =============================================================================

# Celery Broker URL (Redis)
CELERY_BROKER_URL=redis://localhost:6379/0

# Celery Result Backend (Redis)
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================

# Google Analytics ID (optional)
GOOGLE_ANALYTICS_ID=GA_MEASUREMENT_ID

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================

# Push Notification Settings (if using Firebase)
FIREBASE_SERVER_KEY=your-firebase-server-key

# =============================================================================
# API RATE LIMITING
# =============================================================================

# Rate limiting settings
RATELIMIT_STORAGE_URL=redis://localhost:6379/0
RATELIMIT_DEFAULT=200 per day;50 per hour

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test Database URL
TEST_DATABASE_URL=sqlite:///:memory:

# Test Secret Key
TEST_SECRET_KEY=test-secret-key

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. Never commit your actual .env file to version control
# 2. Use strong, unique passwords and keys in production
# 3. Consider using a secrets management service in production
# 4. Rotate keys and passwords regularly
# 5. Use environment-specific configurations
#
# For production deployment:
# - Use strong, randomly generated keys
# - Store sensitive data in a secure vault
# - Use HTTPS for all communications
# - Enable proper logging and monitoring
# - Set up proper backup and recovery procedures
